name: rom_Transplant

on:
  workflow_dispatch:
    inputs:
      URL:
        description: "Địa chỉ tải xuống của gói hệ thống cần chuyển đổi"
        required: true
      OS_version:
        description: "Số phiên bản OS cần đóng gói (có thể để trống)"
      Bottom_URL:
        description: "Địa chỉ tải xuống gói nền"
        required: true
      IMAGE_TYPE:
        description: "Định dạng IMG, có thể chọn erofs hoặc ext"
        required: true
        default: 'erofs'
        type: choice
        options:
        - erofs
        - ext
      EXT4_RW:
        description: 'Đọc-ghi'
        required: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Tối đa hóa môi trường xây dựng
        uses: easimon/maximize-build-space@master
        with:
          swap-size-mb: 8192
          root-reserve-mb: 4096
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: Kiểm tra tệp kho lưu trữ
        uses: actions/checkout@main
      - name: -Chuẩn bị môi trường
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          if [ -n "${{ github.event.inputs.OS_version }}" ]; then
              echo "OS_version=${{ github.event.inputs.OS_version }}" >> $GITHUB_ENV
          else
              echo "OS_version=$(echo "${{ github.event.inputs.URL }}" | cut -d'_' -f3)" >> $GITHUB_ENV
          fi
          echo "EXT4_RW=${{ github.event.inputs.EXT4_RW }}" >> $GITHUB_ENV
          echo "IMAGE_TYPE=${{ github.event.inputs.IMAGE_TYPE }}" >> $GITHUB_ENV
          echo "URL=${{ github.event.inputs.URL }}" >> $GITHUB_ENV
          echo "Bottom_URL=${{ github.event.inputs.Bottom_URL }}" >> $GITHUB_ENV
          sudo apt install python3 python3-pip aria2 zip p7zip-full tar zstd dos2unix curl -y
          sudo apt --fix-broken install
          sudo apt update --fix-missing
          pip3 install --upgrade pip
          pip3 install pycryptodome
          pip3 install setuptools
          pip3 install docopt
          pip3 install requests
          pip3 install beautifulsoup4
          pip3 install --ignore-installed pyyaml
      - name: -Tạo ROM
        env:
          GOFILE_API_TOKEN: ${{ secrets.GOFILE_API_TOKEN }}
        run: |
          sudo bash "$GITHUB_WORKSPACE"/make.sh ${URL} ${OS_version} ${GITHUB_WORKSPACE} $GITHUB_ENV ${Bottom_URL} ${IMAGE_TYPE} ${EXT4_RW}
      - name: -Tải lên GoFile
        env:
          GOFILE_API_TOKEN: ${{ secrets.GOFILE_API_TOKEN }}
        run: |
          echo "Tải file ${{ env.NEW_PACKAGE_NAME }} lên GoFile..."
          ZIP_FILE="$GITHUB_WORKSPACE/zip/${{ env.NEW_PACKAGE_NAME }}"
          GOFILE_RESPONSE=$(curl -s -X POST "https://api.gofile.io/uploadFile" \
            -H "Authorization: Bearer $GOFILE_API_TOKEN" \
            -F "file=@${ZIP_FILE}")
          if echo "$GOFILE_RESPONSE" | grep -q '"status":"ok"'; then
            GOFILE_LINK=$(echo "$GOFILE_RESPONSE" | grep -o '"downloadPage":"[^"]*' | cut -d'"' -f4)
            echo "Tải lên GoFile thành công! Link tải: $GOFILE_LINK"
            echo "GOFILE_LINK=$GOFILE_LINK" >> $GITHUB_ENV
          else
            echo "Tải lên GoFile thất bại: $GOFILE_RESPONSE"
            exit 1
          fi
      - name: -Xử lý gói
        run: |
          mkdir -p "$GITHUB_WORKSPACE"/GithubRelease
          cd "$GITHUB_WORKSPACE"/GithubRelease
          sudo split -b 1536M -d "$GITHUB_WORKSPACE"/zip/"${{ env.NEW_PACKAGE_NAME }}" "${{ env.NEW_PACKAGE_NAME }}"
      - name: -Tải lên Github Release
        uses: ncipollo/release-action@main
        with:
          artifacts: "${{ github.workspace }}/GithubRelease/*"
          name: "${{ env.OS_version }}"
          tag: "${{ env.OS_version }}"
          bodyFile: "${{ github.workspace }}/file.log"
          allowUpdates: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
